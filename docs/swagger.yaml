definitions:
  dto.APIResponse:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.AuthCustomerDTO:
    properties:
      account_type:
        example: individual
        type: string
      company_name:
        example: Tech Company Ltd
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      id:
        example: 123
        type: integer
      is_active:
        example: true
        type: boolean
      is_email_verified:
        example: true
        type: boolean
      is_mobile_verified:
        example: true
        type: boolean
      referrer_agency_id:
        example: 123
        type: integer
      representative_first_name:
        example: John
        type: string
      representative_last_name:
        example: Doe
        type: string
      representative_mobile:
        example: "+989123456789"
        type: string
      uuid:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
  dto.CalculateCampaignCapacityRequest:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      content:
        type: string
      line_number:
        type: string
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      subsegment:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.CalculateCampaignCapacityResponse:
    properties:
      capacity:
        type: integer
      message:
        type: string
    type: object
  dto.CalculateCampaignCostRequest:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      content:
        type: string
      line_number:
        type: string
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      subsegment:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.CalculateCampaignCostResponse:
    properties:
      max_msg_target:
        type: integer
      message:
        type: string
      msg_target:
        type: integer
      sub_total:
        type: integer
      tax:
        type: integer
      total:
        type: integer
    type: object
  dto.CreateSMSCampaignRequest:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      content:
        type: string
      line_number:
        type: string
      schedule_at:
        type: string
      segment:
        type: string
      sex:
        type: string
      subsegment:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.CreateSMSCampaignResponse:
    properties:
      created_at:
        type: string
      message:
        type: string
      status:
        type: string
      uuid:
        type: string
    type: object
  dto.ForgotPasswordRequest:
    properties:
      identifier:
        example: user@example.com or +989123456789
        maxLength: 255
        minLength: 3
        type: string
    required:
    - identifier
    type: object
  dto.GetSMSCampaignResponse:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      comment:
        type: string
      content:
        type: string
      created_at:
        type: string
      line_number:
        type: string
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      status:
        type: string
      subsegment:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  dto.GetWalletBalanceResponse:
    properties:
      balance_status:
        type: string
      credit_limit:
        type: integer
      currency:
        type: string
      free:
        type: integer
      frozen:
        type: integer
      last_updated:
        type: string
      locked:
        type: integer
      message:
        type: string
      minimum_balance:
        type: integer
      pending_transactions:
        type: integer
      total:
        type: integer
    type: object
  dto.ListSMSCampaignsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.GetSMSCampaignResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.LoginRequest:
    properties:
      identifier:
        example: user@example.com or +989123456789
        maxLength: 255
        minLength: 3
        type: string
      password:
        example: SecurePass123!
        maxLength: 100
        minLength: 8
        type: string
    required:
    - identifier
    - password
    type: object
  dto.OTPResendRequest:
    properties:
      customer_id:
        type: integer
      otp_type:
        enum:
        - mobile
        - email
        type: string
    required:
    - customer_id
    - otp_type
    type: object
  dto.OTPVerificationRequest:
    properties:
      customer_id:
        type: integer
      otp_code:
        type: string
      otp_type:
        enum:
        - mobile
        - email
        type: string
    required:
    - customer_id
    - otp_code
    - otp_type
    type: object
  dto.PaginationInfo:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.ResetPasswordRequest:
    properties:
      confirm_password:
        example: NewSecurePass123!
        type: string
      customer_id:
        example: 123
        type: integer
      new_password:
        example: NewSecurePass123!
        maxLength: 100
        minLength: 8
        type: string
      otp_code:
        example: "123456"
        type: string
    required:
    - confirm_password
    - customer_id
    - new_password
    - otp_code
    type: object
  dto.SignupRequest:
    properties:
      account_type:
        description: Account type selection
        enum:
        - individual
        - independent_company
        - marketing_agency
        type: string
      company_address:
        maxLength: 255
        type: string
      company_name:
        description: Company fields (required for independent_company and marketing_agency)
        maxLength: 60
        type: string
      company_phone:
        minLength: 10
        type: string
      confirm_password:
        type: string
      email:
        description: Common fields (required for all types)
        maxLength: 255
        type: string
      national_id:
        maxLength: 20
        minLength: 10
        type: string
      password:
        minLength: 8
        type: string
      postal_code:
        maxLength: 20
        minLength: 10
        type: string
      referrer_agency_code:
        description: Optional agency referral
        type: integer
      representative_first_name:
        description: Representative/Individual fields (required for all types)
        maxLength: 255
        type: string
      representative_last_name:
        maxLength: 255
        type: string
      representative_mobile:
        type: string
    required:
    - account_type
    - confirm_password
    - email
    - password
    - representative_first_name
    - representative_last_name
    - representative_mobile
    type: object
  dto.SignupResponse:
    properties:
      customer_id:
        type: integer
      message:
        type: string
      otp_sent:
        type: boolean
      otp_target:
        description: Mobile number (masked for security)
        type: string
    type: object
  dto.UpdateSMSCampaignRequest:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      content:
        type: string
      line_number:
        type: string
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      subsegment:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.UpdateSMSCampaignResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Initiate password reset by sending OTP to registered mobile
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    customer_id:
                      type: integer
                    expires_in:
                      type: integer
                    masked_phone:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Forgot Password
      tags:
      - Authentication
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email/mobile and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with tokens
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Authentication failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: User Login
      tags:
      - Authentication
  /api/v1/auth/resend-otp:
    post:
      consumes:
      - application/json
      description: Resend OTP code to user's mobile number
      parameters:
      - description: OTP resend request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OTPResendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP resent successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    masked_otp_target:
                      type: string
                    otp_sent:
                      type: boolean
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Resend OTP
      tags:
      - Authentication
  /api/v1/auth/reset:
    post:
      consumes:
      - application/json
      description: Complete password reset with OTP verification
      parameters:
      - description: Password reset data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful with tokens
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    password_changed_at:
                      type: string
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request or OTP
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Reset Password
      tags:
      - Authentication
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user account with email verification
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registration initiated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.SignupResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: User Registration
      tags:
      - Authentication
  /api/v1/auth/verify:
    post:
      consumes:
      - application/json
      description: Verify OTP code sent to user's mobile number
      parameters:
      - description: OTP verification data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OTPVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid OTP or request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Verify OTP
      tags:
      - Authentication
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: Check the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Health Check
      tags:
      - Health
  /api/v1/sms-campaigns:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's campaigns with pagination, ordering,
        and filters
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page (max 100)
        in: query
        name: limit
        required: true
        type: integer
      - default: newest
        description: Order by (newest|oldest)
        in: query
        name: orderby
        type: string
      - description: Filter by title (contains)
        in: query
        name: title
        type: string
      - description: Filter by status (initiated|in-progress|waiting-for-approval|approved|rejected)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListSMSCampaignsResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List SMS Campaigns
      tags:
      - SMS Campaigns
    post:
      consumes:
      - application/json
      description: Create a new SMS campaign with the specified parameters
      parameters:
      - description: SMS campaign creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSMSCampaignRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Campaign created successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateSMSCampaignResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Create SMS Campaign
      tags:
      - SMS Campaigns
  /api/v1/sms-campaigns/{uuid}:
    put:
      consumes:
      - application/json
      description: Update an existing SMS campaign with the specified parameters
      parameters:
      - description: Campaign UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: SMS campaign update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSMSCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Campaign updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateSMSCampaignResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "403":
          description: Forbidden - campaign access denied or update not allowed
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Campaign not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Update SMS Campaign
      tags:
      - SMS Campaigns
  /api/v1/sms-campaigns/calculate-capacity:
    post:
      consumes:
      - application/json
      description: Calculate the potential reach and capacity of an SMS campaign based
        on parameters
      parameters:
      - description: Campaign parameters for capacity calculation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CalculateCampaignCapacityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Capacity calculated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CalculateCampaignCapacityResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Calculate SMS Campaign Capacity
      tags:
      - SMS Campaigns
  /api/v1/sms-campaigns/calculate-cost:
    post:
      consumes:
      - application/json
      description: Calculate the total cost of an SMS campaign based on content, target
        audience, and pricing factors
      parameters:
      - description: Campaign parameters for cost calculation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CalculateCampaignCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Cost calculated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CalculateCampaignCostResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Calculate SMS Campaign Cost
      tags:
      - SMS Campaigns
  /api/v1/wallet/balance:
    get:
      consumes:
      - application/json
      description: Retrieve the current wallet balance and financial information for
        the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Wallet balance retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetWalletBalanceResponse'
              type: object
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Get User Wallet Balance
      tags:
      - Wallet
swagger: "2.0"
