definitions:
  dto.APIResponse:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.ActiveLineNumberItem:
    properties:
      line_number:
        type: string
    type: object
  dto.AdminApproveCampaignRequest:
    properties:
      campaign_id:
        type: integer
      comment:
        maxLength: 1000
        type: string
    required:
    - campaign_id
    type: object
  dto.AdminApproveCampaignResponse:
    properties:
      message:
        type: string
    type: object
  dto.AdminCaptchaInitResponse:
    properties:
      challenge_id:
        type: string
      master_image_base64:
        type: string
      thumb_image_base64:
        type: string
    type: object
  dto.AdminCaptchaVerifyRequest:
    properties:
      challenge_id:
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      user_angle:
        type: number
      username:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - challenge_id
    - password
    - user_angle
    - username
    type: object
  dto.AdminCreateLineNumberRequest:
    properties:
      is_active:
        type: boolean
      line_number:
        maxLength: 50
        minLength: 3
        type: string
      name:
        maxLength: 255
        type: string
      price_factor:
        type: number
      priority:
        type: integer
    required:
    - line_number
    - price_factor
    type: object
  dto.AdminCustomerCampaignItem:
    properties:
      campaign_id:
        type: integer
      click_rate:
        type: number
      created_at:
        type: string
      schedule_at:
        type: string
      status:
        type: string
      title:
        type: string
      total_delivered:
        type: integer
      total_sent:
        type: integer
    type: object
  dto.AdminCustomerDetailDTO:
    properties:
      account_type_id:
        type: integer
      account_type_name:
        type: string
      agency_referer_code:
        type: string
      company_address:
        type: string
      company_name:
        type: string
      company_phone:
        type: string
      created_at:
        type: string
      email:
        type: string
      email_verified_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_email_verified:
        type: boolean
      is_mobile_verified:
        type: boolean
      last_login_at:
        type: string
      mobile_verified_at:
        type: string
      national_id:
        type: string
      postal_code:
        type: string
      referrer_agency_id:
        type: integer
      representative_first_name:
        type: string
      representative_last_name:
        type: string
      representative_mobile:
        type: string
      sheba_number:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  dto.AdminCustomerWithCampaignsResponse:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/dto.AdminCustomerCampaignItem'
        type: array
      customer:
        $ref: '#/definitions/dto.AdminCustomerDetailDTO'
      message:
        type: string
    type: object
  dto.AdminCustomersSharesItem:
    properties:
      agency_share_with_tax:
        type: integer
      click_rate:
        type: number
      company_name:
        type: string
      customer_id:
        type: integer
      first_name:
        type: string
      full_name:
        type: string
      last_name:
        type: string
      referrer_agency_name:
        type: string
      system_share:
        type: integer
      tax_share:
        type: integer
      total_sent:
        type: integer
    type: object
  dto.AdminCustomersSharesResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AdminCustomersSharesItem'
        type: array
      message:
        type: string
      sum_agency_share_with_tax:
        type: integer
      sum_system_share:
        type: integer
      sum_tax_share:
        type: integer
      sum_total_sent:
        type: integer
    type: object
  dto.AdminDTO:
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      username:
        example: admin
        type: string
      uuid:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
    type: object
  dto.AdminGetCampaignResponse:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      comment:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      line_number:
        type: string
      line_number_price_factor:
        type: number
      scheduleat:
        type: string
      segment:
        type: string
      segment_price_factor:
        type: number
      sex:
        type: string
      status:
        type: string
      subsegment:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  dto.AdminLineNumberDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      line_number:
        type: string
      name:
        type: string
      price_factor:
        type: number
      priority:
        type: integer
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  dto.AdminLineNumberReportItem:
    properties:
      line_number:
        type: string
      total_arrived_parts_sent:
        type: integer
      total_cost:
        type: integer
      total_income:
        type: integer
      total_non_arrived_parts_sent:
        type: integer
      total_parts_sent:
        type: integer
      total_sent:
        type: integer
    type: object
  dto.AdminRejectCampaignRequest:
    properties:
      campaign_id:
        type: integer
      comment:
        maxLength: 1000
        type: string
    required:
    - campaign_id
    - comment
    type: object
  dto.AdminRejectCampaignResponse:
    properties:
      message:
        type: string
    type: object
  dto.AdminUpdateLineNumberItem:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      priority:
        type: integer
    required:
    - id
    type: object
  dto.AdminUpdateLineNumbersRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AdminUpdateLineNumberItem'
        minItems: 1
        type: array
    required:
    - items
    type: object
  dto.AgencyActiveDiscountItem:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      customer_id:
        type: integer
      discount_rate:
        type: number
      first_name:
        type: string
      last_name:
        type: string
    type: object
  dto.AgencyCustomerDiscountItem:
    properties:
      agency_share_with_tax:
        type: integer
      created_at:
        type: string
      discount_rate:
        type: number
      expires_at:
        type: string
      total_sent:
        type: integer
    type: object
  dto.AgencyCustomerItem:
    properties:
      company_name:
        type: string
      created_at:
        type: string
      customer_id:
        type: integer
      first_name:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
    type: object
  dto.AgencyCustomerReportItem:
    properties:
      company_name:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      total_agency_share_with_tax:
        type: integer
      total_sent:
        type: integer
    type: object
  dto.AgencyCustomerReportResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AgencyCustomerReportItem'
        type: array
      message:
        type: string
      sum_total_agency_share_with_tax:
        type: integer
      sum_total_sent:
        type: integer
    type: object
  dto.AtipayRequest:
    properties:
      maskedPan:
        description: Masked card number used for payment
        type: string
      referenceNumber:
        description: Unique digital receipt (alphanumeric)
        type: string
      reservationNumber:
        description: The unique ID originally sent by merchant (our invoice number)
        type: string
      rrn:
        description: Transaction reference number
        type: string
      state:
        description: Transaction status (1=CanceledByUser, 2=OK, 3=Failed, etc.)
        type: string
      status:
        description: Payment status code
        type: string
      terminalId:
        description: Terminal number used for payment
        type: string
      traceNumber:
        description: Tracking number generated by payment gateway
        type: string
    type: object
  dto.AuthCustomerDTO:
    properties:
      account_type:
        example: individual
        type: string
      company_name:
        example: Tech Company Ltd
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      is_email_verified:
        example: true
        type: boolean
      is_mobile_verified:
        example: true
        type: boolean
      referrer_agency_id:
        example: 123
        type: integer
      representative_first_name:
        example: John
        type: string
      representative_last_name:
        example: Doe
        type: string
      representative_mobile:
        example: "+989123456789"
        type: string
    type: object
  dto.BotDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      username:
        type: string
      uuid:
        type: string
    type: object
  dto.BotGetCampaignResponse:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      comment:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      line_number:
        type: string
      num_audiences:
        type: integer
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      status:
        type: string
      subsegment:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.BotListCampaignsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.BotGetCampaignResponse'
        type: array
      message:
        type: string
    type: object
  dto.BotLoginRequest:
    properties:
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.BotLoginResponse:
    properties:
      bot:
        $ref: '#/definitions/dto.BotDTO'
      session:
        $ref: '#/definitions/dto.BotSessionDTO'
    type: object
  dto.BotSessionDTO:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  dto.BotUpdateAudienceSpecRequest:
    properties:
      available_audience:
        minimum: 0
        type: integer
      segment:
        maxLength: 255
        type: string
      subsegment:
        maxLength: 255
        type: string
      tags:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - available_audience
    - segment
    - subsegment
    - tags
    type: object
  dto.BotUpdateAudienceSpecResponse:
    properties:
      message:
        type: string
    type: object
  dto.CalculateCampaignCapacityRequest:
    properties:
      adlink:
        maxLength: 10000
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        maxItems: 255
        type: array
      content:
        maxLength: 512
        minLength: 1
        type: string
      line_number:
        maxLength: 255
        type: string
      scheduleat:
        type: string
      segment:
        maxLength: 255
        type: string
      sex:
        maxLength: 255
        type: string
      subsegment:
        items:
          type: string
        maxItems: 255
        type: array
      tags:
        items:
          type: string
        maxItems: 255
        type: array
      title:
        maxLength: 255
        type: string
    type: object
  dto.CalculateCampaignCapacityResponse:
    properties:
      capacity:
        type: integer
      message:
        type: string
    type: object
  dto.CalculateCampaignCostRequest:
    properties:
      adlink:
        maxLength: 10000
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        maxItems: 255
        type: array
      content:
        maxLength: 512
        minLength: 1
        type: string
      line_number:
        maxLength: 255
        type: string
      scheduleat:
        type: string
      segment:
        maxLength: 255
        type: string
      sex:
        maxLength: 255
        type: string
      subsegment:
        items:
          type: string
        maxItems: 255
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 255
        type: string
    type: object
  dto.CalculateCampaignCostResponse:
    properties:
      max_msg_target:
        type: integer
      message:
        type: string
      msg_target:
        type: integer
      total_cost:
        type: integer
    type: object
  dto.ChargeWalletRequest:
    properties:
      amount:
        description: Amount in Tomans (minimum 10000, maximum 1000000000)
        maximum: 1000000000
        minimum: 100000
        type: integer
    required:
    - amount
    type: object
  dto.ChargeWalletResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
      token:
        type: string
    type: object
  dto.CreateAgencyDiscountRequest:
    properties:
      customer_id:
        minimum: 1
        type: integer
      discount_rate:
        maximum: 0.5
        minimum: 0
        type: number
      name:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - customer_id
    - discount_rate
    - name
    type: object
  dto.CreateAgencyDiscountResponse:
    properties:
      discount_rate:
        type: number
      message:
        type: string
    type: object
  dto.CreateCampaignRequest:
    properties:
      adlink:
        maxLength: 10000
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        maxItems: 255
        type: array
      content:
        maxLength: 512
        minLength: 1
        type: string
      line_number:
        maxLength: 255
        type: string
      schedule_at:
        type: string
      segment:
        maxLength: 255
        type: string
      sex:
        maxLength: 255
        type: string
      subsegment:
        items:
          type: string
        maxItems: 255
        type: array
      tags:
        items:
          type: string
        maxItems: 255
        type: array
      title:
        maxLength: 255
        type: string
    type: object
  dto.CreateCampaignResponse:
    properties:
      created_at:
        type: string
      message:
        type: string
      status:
        type: string
      uuid:
        type: string
    type: object
  dto.ForgotPasswordRequest:
    properties:
      identifier:
        example: user@example.com or +989123456789
        maxLength: 255
        minLength: 3
        type: string
    required:
    - identifier
    type: object
  dto.GetCampaignResponse:
    properties:
      adlink:
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        type: array
      comment:
        type: string
      content:
        type: string
      created_at:
        type: string
      line_number:
        type: string
      scheduleat:
        type: string
      segment:
        type: string
      sex:
        type: string
      status:
        type: string
      subsegment:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  dto.GetWalletBalanceResponse:
    properties:
      balance_status:
        type: string
      credit:
        type: integer
      currency:
        type: string
      free:
        type: integer
      frozen:
        type: integer
      last_updated:
        type: string
      locked:
        type: integer
      message:
        type: string
      minimum_balance:
        type: integer
      pending_transactions:
        type: integer
      total:
        type: integer
    type: object
  dto.ListActiveLineNumbersResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ActiveLineNumberItem'
        type: array
      message:
        type: string
    type: object
  dto.ListAgencyActiveDiscountsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AgencyActiveDiscountItem'
        type: array
      message:
        type: string
    type: object
  dto.ListAgencyCustomerDiscountsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AgencyCustomerDiscountItem'
        type: array
      message:
        type: string
    type: object
  dto.ListAgencyCustomersResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.AgencyCustomerItem'
        type: array
      message:
        type: string
    type: object
  dto.ListCampaignsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.GetCampaignResponse'
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/dto.PaginationInfo'
    type: object
  dto.LoginRequest:
    properties:
      identifier:
        example: user@example.com or +989123456789
        maxLength: 255
        minLength: 3
        type: string
      password:
        example: SecurePass123!
        maxLength: 100
        minLength: 8
        type: string
    required:
    - identifier
    - password
    type: object
  dto.OTPResendRequest:
    properties:
      customer_id:
        type: integer
      otp_type:
        enum:
        - mobile
        - email
        type: string
    required:
    - customer_id
    - otp_type
    type: object
  dto.OTPVerificationRequest:
    properties:
      customer_id:
        type: integer
      otp_code:
        type: string
      otp_type:
        enum:
        - mobile
        - email
        type: string
    required:
    - customer_id
    - otp_code
    - otp_type
    type: object
  dto.PaginationInfo:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.ResetPasswordRequest:
    properties:
      confirm_password:
        example: NewSecurePass123!
        type: string
      customer_id:
        example: 1
        type: integer
      new_password:
        example: NewSecurePass123!
        maxLength: 100
        minLength: 8
        type: string
      otp_code:
        example: "123456"
        type: string
    required:
    - confirm_password
    - customer_id
    - new_password
    - otp_code
    type: object
  dto.SignupRequest:
    properties:
      account_type:
        description: Account type selection
        enum:
        - individual
        - independent_company
        - marketing_agency
        type: string
      company_address:
        maxLength: 255
        type: string
      company_name:
        description: Company fields (required for independent_company and marketing_agency)
        maxLength: 60
        type: string
      company_phone:
        minLength: 10
        type: string
      confirm_password:
        type: string
      email:
        description: Common fields (required for all types)
        maxLength: 255
        type: string
      national_id:
        maxLength: 20
        minLength: 10
        type: string
      password:
        minLength: 8
        type: string
      postal_code:
        maxLength: 20
        minLength: 10
        type: string
      referrer_agency_code:
        description: Optional agency referral
        maxLength: 255
        type: string
      representative_first_name:
        description: Representative/Individual fields (required for all types)
        maxLength: 255
        type: string
      representative_last_name:
        maxLength: 255
        type: string
      representative_mobile:
        type: string
      sheba_number:
        maxLength: 255
        type: string
    required:
    - account_type
    - confirm_password
    - email
    - password
    - representative_first_name
    - representative_last_name
    - representative_mobile
    type: object
  dto.SignupResponse:
    properties:
      customer_id:
        type: integer
      message:
        type: string
      otp_sent:
        type: boolean
      otp_target:
        description: Mobile number (masked for security)
        type: string
    type: object
  dto.TransactionHistoryItem:
    properties:
      amount:
        description: Amount in Tomans
        type: integer
      balance_after:
        additionalProperties:
          format: int64
          type: integer
        description: Balance after transaction
        type: object
      balance_before:
        additionalProperties:
          format: int64
          type: integer
        description: Balance before transaction
        type: object
      currency:
        description: Currency (usually TMN)
        type: string
      datetime:
        description: When the transaction occurred
        type: string
      external_ref:
        description: External reference (e.g., Atipay reference)
        type: string
      metadata:
        additionalProperties: {}
        description: Additional transaction metadata
        type: object
      operation:
        description: Operation name for display
        type: string
      status:
        description: Transaction status
        type: string
      uuid:
        description: Transaction UUID
        type: string
    type: object
  dto.TransactionHistoryPaginationInfo:
    properties:
      current_page:
        description: Current page number
        type: integer
      has_next:
        description: Whether there's a next page
        type: boolean
      has_previous:
        description: Whether there's a previous page
        type: boolean
      page_size:
        description: Number of items per page
        type: integer
      total_items:
        description: Total number of items
        type: integer
      total_pages:
        description: Total number of pages
        type: integer
    type: object
  dto.TransactionHistoryResponse:
    properties:
      items:
        description: List of transaction history items
        items:
          $ref: '#/definitions/dto.TransactionHistoryItem'
        type: array
      pagination:
        allOf:
        - $ref: '#/definitions/dto.TransactionHistoryPaginationInfo'
        description: Pagination information
    type: object
  dto.UpdateCampaignRequest:
    properties:
      adlink:
        maxLength: 10000
        type: string
      budget:
        type: integer
      city:
        items:
          type: string
        maxItems: 255
        type: array
      content:
        maxLength: 512
        minLength: 1
        type: string
      finalize:
        type: boolean
      line_number:
        maxLength: 255
        type: string
      scheduleat:
        type: string
      segment:
        maxLength: 255
        type: string
      sex:
        maxLength: 255
        type: string
      subsegment:
        items:
          type: string
        maxItems: 255
        type: array
      tags:
        items:
          type: string
        maxItems: 255
        type: array
      title:
        maxLength: 255
        type: string
    type: object
  dto.UpdateCampaignResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/admin/auth/captcha/init:
    get:
      description: Initialize rotate captcha for admin login (returns base64 images
        and challenge ID)
      produces:
      - application/json
      responses:
        "200":
          description: Captcha initialized
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminCaptchaInitResponse'
              type: object
        "500":
          description: Failed to initialize captcha
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin captcha init
      tags:
      - Admin Authentication
  /api/v1/admin/auth/login:
    post:
      consumes:
      - application/json
      description: Verify captcha and authenticate admin with username/password
      parameters:
      - description: Admin login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AdminCaptchaVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    admin:
                      $ref: '#/definitions/dto.AdminDTO'
                    expires_in:
                      type: integer
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request or captcha
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Incorrect credentials or admin not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "403":
          description: Admin inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin login
      tags:
      - Admin Authentication
  /api/v1/admin/campaigns:
    get:
      description: Retrieve campaigns by title, status, start date, and end date
      parameters:
      - description: Filter by title (contains)
        in: query
        name: title
        type: string
      - description: Filter by status (initiated|in_progress|waiting_for_approval|approved|rejected)
        in: query
        name: status
        type: string
      - description: Filter created_at >= start_date (RFC3339)
        in: query
        name: start_date
        type: string
      - description: Filter created_at <= end_date (RFC3339)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetCampaignResponse'
                  type: array
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin List Campaigns
      tags:
      - Admin Campaigns
  /api/v1/admin/campaigns/{id}:
    get:
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminGetCampaignResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin Get Campaign
      tags:
      - Admin Campaigns
  /api/v1/admin/campaigns/approve:
    post:
      consumes:
      - application/json
      description: Approve a campaign waiting for approval; moves reserved funds from
        frozen to locked
      parameters:
      - description: Approval payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AdminApproveCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminApproveCampaignResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Campaign not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "409":
          description: Invalid state
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Approve Campaign
      tags:
      - Admin Campaigns
  /api/v1/admin/campaigns/reject:
    post:
      consumes:
      - application/json
      description: Reject a campaign waiting for approval; refunds reserved funds
        to free balance
      parameters:
      - description: Rejection payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AdminRejectCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminRejectCampaignResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Campaign not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "409":
          description: Invalid state
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Reject Campaign
      tags:
      - Admin Campaigns
  /api/v1/admin/customer-management/{customer_id}:
    get:
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminCustomerWithCampaignsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin Get Customer With Campaigns
      tags:
      - Admin Customer Management
  /api/v1/admin/customer-management/shares:
    get:
      parameters:
      - description: Filter created_at >= start_date (RFC3339)
        in: query
        name: start_date
        type: string
      - description: Filter created_at <= end_date (RFC3339)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminCustomersSharesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Admin Customers Shares Report
      tags:
      - Admin Customer Management
  /api/v1/admin/line-numbers/:
    get:
      description: Retrieve all line numbers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AdminLineNumberDTO'
                  type: array
              type: object
        "500":
          description: List failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List Line Numbers (Admin)
      tags:
      - Admin Line Numbers
    post:
      consumes:
      - application/json
      description: Create a line number with name (optional), unique value, price
        factor, priority (optional), and is_active (optional)
      parameters:
      - description: Create line number payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AdminCreateLineNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminLineNumberDTO'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Creation failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Create Line Number (Admin)
      tags:
      - Admin Line Numbers
    put:
      consumes:
      - application/json
      description: Update multiple line numbers; all IDs must exist
      parameters:
      - description: Batch update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AdminUpdateLineNumbersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    updated:
                      type: boolean
                  type: object
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Update failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Batch Update Line Numbers (Admin)
      tags:
      - Admin Line Numbers
  /api/v1/admin/line-numbers/report:
    get:
      description: Retrieve report per line number (totals)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AdminLineNumberReportItem'
                  type: array
              type: object
        "500":
          description: Report generation failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Line Numbers Report (Admin)
      tags:
      - Admin Line Numbers
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Initiate password reset by sending OTP to registered mobile
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    customer_id:
                      type: integer
                    expires_in:
                      type: integer
                    masked_phone:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Forgot Password
      tags:
      - Authentication
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email/mobile and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with tokens
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Authentication failed
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: User Login
      tags:
      - Authentication
  /api/v1/auth/resend-otp:
    post:
      consumes:
      - application/json
      description: Resend OTP code to user's mobile number
      parameters:
      - description: OTP resend request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OTPResendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP resent successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    masked_otp_target:
                      type: string
                    otp_sent:
                      type: boolean
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Resend OTP
      tags:
      - Authentication
  /api/v1/auth/reset:
    post:
      consumes:
      - application/json
      description: Complete password reset with OTP verification
      parameters:
      - description: Password reset data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful with tokens
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    password_changed_at:
                      type: string
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request or OTP
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Reset Password
      tags:
      - Authentication
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user account with email verification
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registration initiated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.SignupResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: User Registration
      tags:
      - Authentication
  /api/v1/auth/verify:
    post:
      consumes:
      - application/json
      description: Verify OTP code sent to user's mobile number
      parameters:
      - description: OTP verification data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OTPVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP verified successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  properties:
                    access_token:
                      type: string
                    customer:
                      $ref: '#/definitions/dto.AuthCustomerDTO'
                    expires_in:
                      type: integer
                    refresh_token:
                      type: string
                    token_type:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid OTP or request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Verify OTP
      tags:
      - Authentication
  /api/v1/bot/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bot login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BotLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BotLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Bot Login
      tags:
      - Bot Authentication
  /api/v1/bot/campaigns/{id}/executed:
    post:
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Bot Move Campaign to Executed
      tags:
      - Bot Campaigns
  /api/v1/bot/campaigns/{id}/running:
    post:
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Bot Move Campaign to Running
      tags:
      - Bot Campaigns
  /api/v1/bot/campaigns/audience-spec:
    post:
      consumes:
      - application/json
      parameters:
      - description: Audience spec update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BotUpdateAudienceSpecRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BotUpdateAudienceSpecResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Bot Update Audience Spec
      tags:
      - Bot Campaigns
  /api/v1/bot/campaigns/ready:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.BotListCampaignsResponse'
              type: object
      summary: Bot List Ready Campaigns
      tags:
      - Bot Campaigns
  /api/v1/campaigns:
    get:
      consumes:
      - application/json
      description: Retrieve the authenticated user's campaigns with pagination, ordering,
        and filters
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page (max 100)
        in: query
        name: limit
        required: true
        type: integer
      - default: newest
        description: Order by (newest|oldest)
        in: query
        name: orderby
        type: string
      - description: Filter by title (contains)
        in: query
        name: title
        type: string
      - description: Filter by status (initiated|in-progress|waiting-for-approval|approved|rejected|running|executed)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListCampaignsResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List Campaigns
      tags:
      - Campaigns
    post:
      consumes:
      - application/json
      description: Create a new campaign with the specified parameters
      parameters:
      - description: Campaign creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCampaignRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Campaign created successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateCampaignResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Create Campaign
      tags:
      - Campaigns
  /api/v1/campaigns/{uuid}:
    put:
      consumes:
      - application/json
      description: Update an existing campaign with the specified parameters
      parameters:
      - description: Campaign UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Campaign update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Campaign updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateCampaignResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "403":
          description: Forbidden - campaign access denied or update not allowed
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Campaign not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Update Campaign
      tags:
      - Campaigns
  /api/v1/campaigns/audience-spec:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    additionalProperties: true
                    type: object
                  type: object
              type: object
      summary: List Audience Spec
      tags:
      - Campaigns
  /api/v1/campaigns/calculate-capacity:
    post:
      consumes:
      - application/json
      description: Calculate the potential reach and capacity of an campaign based
        on parameters
      parameters:
      - description: Campaign parameters for capacity calculation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CalculateCampaignCapacityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Capacity calculated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CalculateCampaignCapacityResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Calculate Campaign Capacity
      tags:
      - Campaigns
  /api/v1/campaigns/calculate-cost:
    post:
      consumes:
      - application/json
      description: Calculate the total cost of an campaign based on content, target
        audience, and pricing factors
      parameters:
      - description: Campaign parameters for cost calculation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CalculateCampaignCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Cost calculated successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CalculateCampaignCostResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Calculate Campaign Cost
      tags:
      - Campaigns
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: Check the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Health Check
      tags:
      - Health
  /api/v1/line-numbers/active:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListActiveLineNumbersResponse'
              type: object
      summary: List Active Line Numbers
      tags:
      - Line Numbers
  /api/v1/payments/callback/{invoice_number}:
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      description: Handles the callback from the payment gateway (Atipay)
      parameters:
      - description: Invoice (reservation) number
        in: path
        name: invoice_number
        required: true
        type: string
      - description: Callback data from Atipay (form or JSON)
        in: body
        name: request
        schema:
          $ref: '#/definitions/dto.AtipayRequest'
      produces:
      - text/html
      responses:
        "200":
          description: HTML payment result page
          schema:
            type: string
        "400":
          description: Invalid request or validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Payment request not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "409":
          description: Payment already processed or expired
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Payment Callback
      tags:
      - Payments
  /api/v1/payments/charge-wallet:
    post:
      consumes:
      - application/json
      description: Charge a customer's wallet with the specified amount using Atipay
        payment gateway
      parameters:
      - description: Wallet charging data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ChargeWalletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Wallet charged successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ChargeWalletResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Charge Wallet
      tags:
      - Payments
  /api/v1/payments/history:
    get:
      consumes:
      - application/json
      description: Retrieve paginated transaction history for the authenticated customer
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 'Number of items per page (default: 20, max: 100)'
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: Start date filter (ISO 8601 format)
        in: query
        name: start_date
        type: string
      - description: End date filter (ISO 8601 format)
        in: query
        name: end_date
        type: string
      - description: Transaction type filter
        in: query
        name: type
        type: string
      - description: Transaction status filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction history retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.TransactionHistoryResponse'
              type: object
        "400":
          description: Validation error or invalid request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Get Transaction History
      tags:
      - Payments
  /api/v1/reports/agency/customers:
    get:
      consumes:
      - application/json
      description: Retrieve per-customer aggregated stats of campaigns for an agency
        with pagination and filters
      parameters:
      - description: Sorting (name_asc|name_desc|sent_desc|share_desc)
        in: query
        name: orderby
        type: string
      - description: Start date (RFC3339)
        in: query
        name: start_date
        type: string
      - description: End date (RFC3339)
        in: query
        name: end_date
        type: string
      - description: Filter by customer name (first+last)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AgencyCustomerReportResponse'
              type: object
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Get Agency Customer Report
      tags:
      - Reports
  /api/v1/reports/agency/customers/{customer_id}/discounts:
    get:
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListAgencyCustomerDiscountsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List Customer Discounts Under Agency
      tags:
      - Reports
  /api/v1/reports/agency/customers/list:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListAgencyCustomersResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List Agency Customers
      tags:
      - Reports
  /api/v1/reports/agency/discounts:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create discount payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAgencyDiscountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateAgencyDiscountResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Create Agency Discount
      tags:
      - Reports
  /api/v1/reports/agency/discounts/active:
    get:
      parameters:
      - description: Filter by user name (first+last)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListAgencyActiveDiscountsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: List Active Discounts of Agency
      tags:
      - Reports
  /api/v1/wallet/balance:
    get:
      consumes:
      - application/json
      description: Retrieve the current wallet balance and financial information for
        the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Wallet balance retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetWalletBalanceResponse'
              type: object
        "401":
          description: Unauthorized - customer not found or inactive
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "404":
          description: Wallet or snapshot not found
          schema:
            $ref: '#/definitions/dto.APIResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.APIResponse'
      summary: Get User Wallet Balance
      tags:
      - Wallet
swagger: "2.0"
